version: "3.9"

services:

  devcontainer:
    build:
      context: .
      target: dev
      {%- if cookiecutter.private_package_repository_name %}
      secrets:
        - poetry-auth
      {%- endif %}
      args:
        PYTHON_VERSION: ${PYTHON_VERSION:-{{ cookiecutter.python_version }}}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    {%- if not cookiecutter.private_package_repository_name %}
    environment:
      - POETRY_PYPI_TOKEN_PYPI
    {%- else %}
    secrets:
      - poetry-auth
    {%- endif %}
    volumes:
      - ..:/workspaces
    {%- if cookiecutter.with_postgresql %}
    networks:
      - net
    {%- endif %}

  dev:
    extends: devcontainer
    stdin_open: true
    tty: true
    entrypoint: []
    command:
      [
        "sh",
        "-c",
        "sudo chown user $$SSH_AUTH_SOCK && cp --update /opt/build/poetry/poetry.lock /workspaces/{{ cookiecutter.__project_name_kebab_case }}/ && mkdir -p /workspaces/{{ cookiecutter.__project_name_kebab_case }}/.git/hooks/ && cp --update /opt/build/git/* /workspaces/{{ cookiecutter.__project_name_kebab_case }}/.git/hooks/ && zsh"
      ]
    environment:
      {%- if not cookiecutter.private_package_repository_name %}
      - POETRY_PYPI_TOKEN_PYPI
      {%- endif %}
      - SSH_AUTH_SOCK=/run/host-services/ssh-auth.sock
    {%- if cookiecutter.with_fastapi_api|int %}
    ports:
      - "8000"
    {%- endif %}
    volumes:
      - ~/.gitconfig:/etc/gitconfig
      - ~/.ssh/known_hosts:/home/user/.ssh/known_hosts
      - ${SSH_AGENT_AUTH_SOCK:-/run/host-services/ssh-auth.sock}:/run/host-services/ssh-auth.sock
    profiles:
      - dev
  {%- if cookiecutter.project_type == "app" %}

  app:
    build:
      context: .
      target: app
      {%- if cookiecutter.private_package_repository_name %}
      secrets:
        - poetry-auth
      {%- endif %}
    tty: true
    {%- if cookiecutter.with_fastapi_api|int %}
    ports:
      - "8000:8000"
    {%- endif %}
    profiles:
      - app
  {%- endif %}
  {%- if cookiecutter.with_postgresql %}

  {{ cookiecutter.postgresql_server }}:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - {{ cookiecutter.postgresql_server }}:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:{{ cookiecutter.postgresql_forward_port }}:5432"
    networks:
      - net
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DB_NAME}
  {%- endif %}
  {%- if cookiecutter.with_adminer %}

  adminer:
    image: adminer:latest
    restart: unless-stopped
    depends_on:
      - {{ cookiecutter.postgresql_server }}
    ports:
      - "127.0.0.1:{{ cookiecutter.adminer_forward_port }}:8080"
    networks:
      - net
    environment:
      ADMINER_DEFAULT_SERVER: {{ cookiecutter.postgresql_server }}
  {%- endif %}
{%- if cookiecutter.private_package_repository_name %}

secrets:
  poetry-auth:
    file: "${POETRY_AUTH_TOML_PATH:-~/Library/Application Support/pypoetry/auth.toml}"
{%- endif %}
{%- if cookiecutter.with_postgresql %}

volumes:
  {{ cookiecutter.postgresql_server }}:

networks:
  net:
{%- endif %}
